[
["index.html", "STAT 454 Bayesian Statistics - Pet Adoption Chapter 1 Preface", " STAT 454 Bayesian Statistics - Pet Adoption Connie Zhang, Spring 2020 Macalester College Chapter 1 Preface Hello! Welcome to the bookdown of my STAT 454 Bayesian Statistics project! "],
["motivation.html", "Chapter 2 Motivation 2.1 Why this? 2.2 A snapshot", " Chapter 2 Motivation 2.1 Why this? sdghj 2.2 A snapshot asdfash "],
["data-source.html", "Chapter 3 Data Source 3.1 Variable Table", " Chapter 3 Data Source dfd 3.1 Variable Table "],
["data-cleaning.html", "Chapter 4 Data Cleaning", " Chapter 4 Data Cleaning jhgklja "],
["visualizations.html", "Chapter 5 Visualizations 5.1 General Impression 5.2 Starting off", " Chapter 5 Visualizations 5.1 General Impression 5.2 Starting off "],
["ordered-logistic-regression.html", "Chapter 6 Ordered Logistic Regression 6.1 Proportional Odds Assumption 6.2 Interpretation", " Chapter 6 Ordered Logistic Regression Have you ever wondered what to do when you want to predict more than 2 categories, and these categories seem to be ordered*? Ordered logistic regression is the way to go! 6.1 Proportional Odds Assumption For ordered logistic regression, we assume that the relationship between each pair of outcome groups is the same. In other words, the coefficient for variable A will be the same regardless of whether it’s describing the relationship between outcome group 1 and 2, or outcome group 2 and 3. 6.2 Interpretation The interpretation for ordered logistic regression is very similar to logistic regression. Let Y be an ordinal outcome with J categories. \\(\\beta_{j0}\\)s are the “cutpoints” between adjacent categories, often seen as the intercept. \\(\\beta_i\\)s are the coefficients, and \\(x_i\\)s are prediction variables. Our logistic regression model would look something like this: \\[logit(P(Y\\leq j))=\\beta_{j0}+\\beta_1x_1-...-\\beta_nx_n\\] We will see a specific example of this in the next chapter. *In this case, we have 5 categories for adoption speed, and we believe that the “distance” between these 5 adoption speeds are not equal. "],
["modelling.html", "Chapter 7 Modelling 7.1 Model 1 7.2 Model 2 7.3 Model 3 7.4 Making some adjustments", " Chapter 7 Modelling First, let’s load some essential package. We will also create a sample of 1000 for faster modelling. load(&quot;adoption.RData&quot;) set.seed(454) mysample &lt;- adoption[sample(1:nrow(adoption), 1000, replace=FALSE),] 7.1 Model 1 From fig 1- fig n, we see that health factors and type can be useful factors in predicting adoption speed. For this model, we have to set a R2 prior. I set R2 at 0.5 and what=NULL, which will give us a standard uniform prior on R2. ### Model Building \\[ \\text{Let }Y_i\\text{ be the adoption speed with k=0,1,2,3,4.} \\\\y_i|(\\beta_{0k},\\beta_1,...,\\beta_6)\\sim Bern(\\theta_{ki})\\text{ where }\\theta_{ki}\\text{ is the }P(Y_i\\leq k)\\text{ for the }i^{th}\\text{ animal.} \\\\log(\\frac{\\theta_{ki}}{1-\\theta_{ki}})=logit(\\hat P(Y\\leq k))=\\beta_{k0}+\\beta_1x_1...+\\beta_5x_5 \\\\\\text{ where }x_i\\text{ for i from 1 to 6 is the indicator for cat, minor injury, severe injury,} \\\\\\text{sterilization, vaccination, and dewormed.} \\\\\\beta_{k0}\\sim N(m_{k0},s_{k0}^2) \\\\\\beta_1\\sim N(m_1,s_1^2) \\\\...\\] model1 &lt;- stan_polr(AdoptionSpeed ~ Type+Health+Sterilized+Vaccinated+Dewormed, data =mysample, prior=R2(0.5,what=NULL),iter=5000, seed = 454) 7.1.1 Posterior Inference summary(model1) ## ## Model Info: ## function: stan_polr ## family: ordered [logistic] ## formula: AdoptionSpeed ~ Type + Health + Sterilized + Vaccinated + Dewormed ## algorithm: sampling ## sample: 10000 (posterior sample size) ## priors: see help(&#39;prior_summary&#39;) ## observations: 812 ## ## Estimates: ## mean sd 10% 50% 90% ## Type1 -0.3 0.1 -0.5 -0.3 -0.1 ## Health1 0.4 0.4 0.0 0.4 0.9 ## Health2 2.3 1.4 0.7 2.2 4.0 ## Sterilized1 0.7 0.2 0.5 0.7 0.9 ## Vaccinated1 0.3 0.2 0.1 0.3 0.5 ## Dewormed1 0.0 0.2 -0.2 0.0 0.2 ## 0|1 -3.4 0.2 -3.7 -3.3 -3.1 ## 1|2 -1.1 0.1 -1.2 -1.1 -0.9 ## 2|3 0.3 0.1 0.1 0.3 0.4 ## 3|4 1.3 0.1 1.1 1.3 1.5 ## ## Fit Diagnostics: ## mean sd 10% 50% 90% ## mean_PPD:0 0.0 0.0 0.0 0.0 0.0 ## mean_PPD:1 0.2 0.0 0.2 0.2 0.2 ## mean_PPD:2 0.3 0.0 0.3 0.3 0.3 ## mean_PPD:3 0.2 0.0 0.2 0.2 0.2 ## mean_PPD:4 0.3 0.0 0.2 0.3 0.3 ## ## The mean_ppd is the sample average posterior predictive distribution of the outcome variable (for details see help(&#39;summary.stanreg&#39;)). ## ## MCMC diagnostics ## mcse Rhat n_eff ## Type1 0.0 1.0 14595 ## Health1 0.0 1.0 12493 ## Health2 0.0 1.0 9358 ## Sterilized1 0.0 1.0 11432 ## Vaccinated1 0.0 1.0 11821 ## Dewormed1 0.0 1.0 10878 ## 0|1 0.0 1.0 11152 ## 1|2 0.0 1.0 11878 ## 2|3 0.0 1.0 12729 ## 3|4 0.0 1.0 13564 ## mean_PPD:0 0.0 1.0 10906 ## mean_PPD:1 0.0 1.0 10018 ## mean_PPD:2 0.0 1.0 10341 ## mean_PPD:3 0.0 1.0 10322 ## mean_PPD:4 0.0 1.0 10643 ## log-posterior 0.1 1.0 2823 ## ## For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1). The formula using the posterior means of each variable is: \\[logit(\\hat P(Y\\leq k))=\\beta_{k0}-0.291*Type+0.442*Health1+2.290*Health2+0.691*Sterilized1 \\\\+0.319*Vaccinated1-0.002*Dewormed1 \\\\\\text{For k =0,1,2,3,4}, \\beta_{k0}=0,-3.62,-1.42,-0.17,0.76\\text{ respectively}\\] If an animal has a severe injury, then the odds of that animal getting adopted slower will increase by e^2.290=9.87 times than a healthy animal, keeping all other variables constant. We can see that the mean of Dewormed is near zero, therefore, we will exclude Dewormed in our future model. 7.2 Model 2 With further investigations, we have also found “AgeGroup” and “mix_breed” to be important factors. We will include these in our models. 7.2.1 Model Building \\[ \\text{Let }Y_i\\text{ be the adoption speed with k=0,1,2,3,4.} \\\\y_i|(\\beta_{0k},\\beta_1,...,\\beta_6)\\sim Bern(\\theta_{ki})\\text{ where }\\theta_{ki}\\text{ is the }P(Y_i\\leq k)\\text{ for the }i^{th}\\text{ animal.} \\\\log(\\frac{\\theta_{ki}}{1-\\theta_{ki}})=logit(\\hat P(Y\\leq k))=\\beta_{k0}+\\beta_1x_1...+\\beta_{10}x_{10} \\\\\\text{ where }x_i\\text{ for i from 1 to 11 is the indicator for cat, minor/severe injury,} \\\\\\text{sterilization, vaccination, age groups 1-5, and Mix breed.} \\\\\\beta_{k0}\\sim N(m_{k0},s_{k0}^2) \\\\\\beta_1\\sim N(m_1,s_1^2) \\\\...\\] model2 &lt;- stan_polr(AdoptionSpeed ~ Type+Health+Sterilized+Vaccinated+AgeGroup+MixedBreed, data =mysample, prior=R2(0.5,what=NULL),iter=5000, seed = 454) 7.2.2 Posterior Inference summary(model2) ## ## Model Info: ## function: stan_polr ## family: ordered [logistic] ## formula: AdoptionSpeed ~ Type + Health + Sterilized + Vaccinated + AgeGroup + ## MixedBreed ## algorithm: sampling ## sample: 10000 (posterior sample size) ## priors: see help(&#39;prior_summary&#39;) ## observations: 822 ## ## Estimates: ## mean sd 10% 50% 90% ## Type1 0.5 0.2 0.2 0.5 0.8 ## Health1 0.5 0.3 0.0 0.5 0.9 ## Health2 1.7 1.3 0.1 1.6 3.3 ## Sterilized1 0.5 0.2 0.2 0.5 0.7 ## Vaccinated1 0.2 0.1 0.1 0.2 0.4 ## AgeGroup1 0.5 0.2 0.3 0.5 0.8 ## AgeGroup2 0.7 0.2 0.4 0.7 1.0 ## AgeGroup3 1.0 0.3 0.5 1.0 1.4 ## AgeGroup4 0.7 0.4 0.1 0.6 1.2 ## AgeGroup5 0.5 0.6 -0.2 0.5 1.3 ## MixedBreed1 1.1 0.2 0.8 1.1 1.4 ## 0|1 -2.5 0.3 -2.8 -2.4 -2.1 ## 1|2 -0.1 0.2 -0.4 -0.1 0.2 ## 2|3 1.2 0.2 0.9 1.2 1.5 ## 3|4 2.3 0.2 2.0 2.3 2.6 ## ## Fit Diagnostics: ## mean sd 10% 50% 90% ## mean_PPD:0 0.0 0.0 0.0 0.0 0.0 ## mean_PPD:1 0.2 0.0 0.2 0.2 0.2 ## mean_PPD:2 0.3 0.0 0.3 0.3 0.3 ## mean_PPD:3 0.2 0.0 0.2 0.2 0.2 ## mean_PPD:4 0.3 0.0 0.2 0.3 0.3 ## ## The mean_ppd is the sample average posterior predictive distribution of the outcome variable (for details see help(&#39;summary.stanreg&#39;)). ## ## MCMC diagnostics ## mcse Rhat n_eff ## Type1 0.0 1.0 16810 ## Health1 0.0 1.0 11878 ## Health2 0.0 1.0 10988 ## Sterilized1 0.0 1.0 15487 ## Vaccinated1 0.0 1.0 15457 ## AgeGroup1 0.0 1.0 13643 ## AgeGroup2 0.0 1.0 13077 ## AgeGroup3 0.0 1.0 11812 ## AgeGroup4 0.0 1.0 13295 ## AgeGroup5 0.0 1.0 12639 ## MixedBreed1 0.0 1.0 12542 ## 0|1 0.0 1.0 10122 ## 1|2 0.0 1.0 11369 ## 2|3 0.0 1.0 13317 ## 3|4 0.0 1.0 14103 ## mean_PPD:0 0.0 1.0 11610 ## mean_PPD:1 0.0 1.0 10820 ## mean_PPD:2 0.0 1.0 10755 ## mean_PPD:3 0.0 1.0 10976 ## mean_PPD:4 0.0 1.0 11142 ## log-posterior 0.1 1.0 2513 ## ## For each parameter, mcse is Monte Carlo standard error, n_eff is a crude measure of effective sample size, and Rhat is the potential scale reduction factor on split chains (at convergence Rhat=1). 7.3 Model 3 The one with interaction terms. 7.4 Making some adjustments We see that our accuracy is less than ideal. One reason behind this could be due to how adoption speed is grouped. Group 0 is being adopted the day of, group 1 is being adopted between 2-7 days, and group 2 is being adopted between 8-30 days. The difference between group 0,1, and 2 can be due to chance, therefore, I’ve decided to group groups 0,1, and 2 into 1 group for our final model. "],
["final-model.html", "Chapter 8 Final Model 8.1 Discussion", " Chapter 8 Final Model The three group model. Fitting on training data then applying it to testing data. 8.1 Discussion What this model tells us. Which factors are important? What can we do to improve our model (cuteness meter)? "],
["shiny-apps.html", "Chapter 9 Shiny Apps! 9.1 User Input", " Chapter 9 Shiny Apps! 9.1 User Input "],
["final-reflections.html", "Chapter 10 Final Reflections 10.1 Advice for first time capstone people 10.2 Acknowledgements 10.3 Citations", " Chapter 10 Final Reflections 10.1 Advice for first time capstone people 10.2 Acknowledgements 10.3 Citations "]
]
